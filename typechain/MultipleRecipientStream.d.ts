/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MultipleRecipientStreamInterface extends ethers.utils.Interface {
  functions: {
    "createStream(address[],uint256,address,uint256,uint256)": FunctionFragment;
    "getStream(uint256,address)": FunctionFragment;
    "getStreamId(uint256,address)": FunctionFragment;
    "nextStreamId()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createStream",
    values: [string[], BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStream",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getStreamId",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "nextStreamId",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "createStream",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getStream", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getStreamId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nextStreamId",
    data: BytesLike
  ): Result;

  events: {};
}

export class MultipleRecipientStream extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MultipleRecipientStreamInterface;

  functions: {
    createStream(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createStream(address[],uint256,address,uint256,uint256)"(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getStream(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      sender: string;
      recipient: string;
      deposit: BigNumber;
      tokenAddress: string;
      startTime: BigNumber;
      stopTime: BigNumber;
      remainingBalance: BigNumber;
      ratePerSecond: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: string;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "getStream(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      sender: string;
      recipient: string;
      deposit: BigNumber;
      tokenAddress: string;
      startTime: BigNumber;
      stopTime: BigNumber;
      remainingBalance: BigNumber;
      ratePerSecond: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: string;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    getStreamId(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      streamId: BigNumber;
      0: BigNumber;
    }>;

    "getStreamId(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      streamId: BigNumber;
      0: BigNumber;
    }>;

    nextStreamId(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "nextStreamId()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;
  };

  createStream(
    _recipients: string[],
    _deposit: BigNumberish,
    _tokenAddress: string,
    _startTime: BigNumberish,
    _stopTime: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createStream(address[],uint256,address,uint256,uint256)"(
    _recipients: string[],
    _deposit: BigNumberish,
    _tokenAddress: string,
    _startTime: BigNumberish,
    _stopTime: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getStream(
    _streamId: BigNumberish,
    _address: string,
    overrides?: CallOverrides
  ): Promise<{
    sender: string;
    recipient: string;
    deposit: BigNumber;
    tokenAddress: string;
    startTime: BigNumber;
    stopTime: BigNumber;
    remainingBalance: BigNumber;
    ratePerSecond: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: string;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  "getStream(uint256,address)"(
    _streamId: BigNumberish,
    _address: string,
    overrides?: CallOverrides
  ): Promise<{
    sender: string;
    recipient: string;
    deposit: BigNumber;
    tokenAddress: string;
    startTime: BigNumber;
    stopTime: BigNumber;
    remainingBalance: BigNumber;
    ratePerSecond: BigNumber;
    0: string;
    1: string;
    2: BigNumber;
    3: string;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  getStreamId(
    _streamId: BigNumberish,
    _address: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getStreamId(uint256,address)"(
    _streamId: BigNumberish,
    _address: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  nextStreamId(overrides?: CallOverrides): Promise<BigNumber>;

  "nextStreamId()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    createStream(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createStream(address[],uint256,address,uint256,uint256)"(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStream(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      sender: string;
      recipient: string;
      deposit: BigNumber;
      tokenAddress: string;
      startTime: BigNumber;
      stopTime: BigNumber;
      remainingBalance: BigNumber;
      ratePerSecond: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: string;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    "getStream(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<{
      sender: string;
      recipient: string;
      deposit: BigNumber;
      tokenAddress: string;
      startTime: BigNumber;
      stopTime: BigNumber;
      remainingBalance: BigNumber;
      ratePerSecond: BigNumber;
      0: string;
      1: string;
      2: BigNumber;
      3: string;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    getStreamId(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStreamId(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nextStreamId(overrides?: CallOverrides): Promise<BigNumber>;

    "nextStreamId()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    createStream(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createStream(address[],uint256,address,uint256,uint256)"(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getStream(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStream(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStreamId(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStreamId(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nextStreamId(overrides?: CallOverrides): Promise<BigNumber>;

    "nextStreamId()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    createStream(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createStream(address[],uint256,address,uint256,uint256)"(
      _recipients: string[],
      _deposit: BigNumberish,
      _tokenAddress: string,
      _startTime: BigNumberish,
      _stopTime: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getStream(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStream(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStreamId(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStreamId(uint256,address)"(
      _streamId: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nextStreamId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "nextStreamId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
